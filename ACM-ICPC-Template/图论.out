\BOOKMARK [0][-]{chapter.1}{图论}{}% 1
\BOOKMARK [1][-]{section.1.1}{最小生成树}{chapter.1}% 2
\BOOKMARK [2][-]{subsection.1.1.1}{Kruskal\040Algorithm}{section.1.1}% 3
\BOOKMARK [2][-]{subsection.1.1.2}{Prim\040Algorithm}{section.1.1}% 4
\BOOKMARK [1][-]{section.1.2}{拓扑排序}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.3}{欧拉回路}{chapter.1}% 6
\BOOKMARK [2][-]{subsection.1.3.1}{判断}{section.1.3}% 7
\BOOKMARK [2][-]{subsection.1.3.2}{n个点和m条无向边的图，每条边仅可遍历一次，求图中欧拉路径的条数}{section.1.3}% 8
\BOOKMARK [2][-]{subsection.1.3.3}{单词拼接，字典序最小}{section.1.3}% 9
\BOOKMARK [2][-]{subsection.1.3.4}{正向反向两次遍历所有边，路径输出}{section.1.3}% 10
\BOOKMARK [1][-]{section.1.4}{LCA}{chapter.1}% 11
\BOOKMARK [2][-]{subsection.1.4.1}{暴力求解}{section.1.4}% 12
\BOOKMARK [2][-]{subsection.1.4.2}{二分搜索}{section.1.4}% 13
\BOOKMARK [2][-]{subsection.1.4.3}{基于RMQ的算法}{section.1.4}% 14
\BOOKMARK [2][-]{subsection.1.4.4}{Tarjan算法}{section.1.4}% 15
\BOOKMARK [2][-]{subsection.1.4.5}{利用LCA获得树上任意两点距离}{section.1.4}% 16
\BOOKMARK [1][-]{section.1.5}{最小树形图}{chapter.1}% 17
\BOOKMARK [2][-]{subsection.1.5.1}{朱刘算法}{section.1.5}% 18
\BOOKMARK [2][-]{subsection.1.5.2}{有固定根}{section.1.5}% 19
\BOOKMARK [2][-]{subsection.1.5.3}{无固定根}{section.1.5}% 20
\BOOKMARK [2][-]{subsection.1.5.4}{最小树形图路径}{section.1.5}% 21
\BOOKMARK [2][-]{subsection.1.5.5}{其他}{section.1.5}% 22
\BOOKMARK [1][-]{section.1.6}{生成树计数}{chapter.1}% 23
\BOOKMARK [2][-]{subsection.1.6.1}{Matrix-Tree定理}{section.1.6}% 24
\BOOKMARK [2][-]{subsection.1.6.2}{选择一些边连通使得任意两点之间恰好有一条路径,求不同的选择方案数}{section.1.6}% 25
\BOOKMARK [2][-]{subsection.1.6.3}{最小生成树计数}{section.1.6}% 26
\BOOKMARK [1][-]{section.1.7}{最短路}{chapter.1}% 27
\BOOKMARK [2][-]{subsection.1.7.1}{Dijkstra\040+\040HeapNode}{section.1.7}% 28
\BOOKMARK [2][-]{subsection.1.7.2}{Bellman_Ford}{section.1.7}% 29
\BOOKMARK [2][-]{subsection.1.7.3}{SPFA}{section.1.7}% 30
\BOOKMARK [2][-]{subsection.1.7.4}{Floyd_Warshall}{section.1.7}% 31
\BOOKMARK [1][-]{section.1.8}{二分图匹配}{chapter.1}% 32
\BOOKMARK [2][-]{subsection.1.8.1}{概念}{section.1.8}% 33
\BOOKMARK [2][-]{subsection.1.8.2}{二分图的性质}{section.1.8}% 34
\BOOKMARK [2][-]{subsection.1.8.3}{二分图的判定}{section.1.8}% 35
\BOOKMARK [2][-]{subsection.1.8.4}{匈牙利算法\(Hungary Algorithm\)}{section.1.8}% 36
\BOOKMARK [2][-]{subsection.1.8.5}{输出最小点覆盖的点}{section.1.8}% 37
\BOOKMARK [2][-]{subsection.1.8.6}{霍普克洛夫特-卡普算法}{section.1.8}% 38
\BOOKMARK [2][-]{subsection.1.8.7}{二分图带权匹配}{section.1.8}% 39
\BOOKMARK [2][-]{subsection.1.8.8}{二分图带权匹配拆点}{section.1.8}% 40
\BOOKMARK [2][-]{subsection.1.8.9}{稳定婚姻匹配}{section.1.8}% 41
